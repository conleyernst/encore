{"ast":null,"code":"import _classCallCheck from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/conley/Desktop/Projects/encore/encore-app/src/components/add-song-dialog.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { THEME, blue } from \"../encore-theme\";\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\nimport { withStyles } from \"@material-ui/core/styles/index\";\n\nvar axios = require('axios');\n\nvar styles = function styles(theme) {\n  return {\n    songTxt: {\n      color: blue\n    } // fab: {\n    //     margin: theme.spacing.unit,\n    //     bottom: 0,\n    //     right: 0,\n    //     position: 'absolute',\n    //     color: extra_light_pink,\n    // },\n\n  };\n};\n\nvar AddSongDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddSongDialog, _Component);\n\n  function AddSongDialog(props) {\n    var _this;\n\n    _classCallCheck(this, AddSongDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddSongDialog).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        song: event.target.value\n      });\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        token: _this.props.token\n      }, function () {\n        return _this.props.updateModalState({\n          modalIsOpen: true\n        });\n      }); // this.props.updateModalState({\n      //     modalIsOpen: true,\n      // });\n\n    };\n\n    _this.handleClose = function () {\n      _this.props.updateModalState({\n        modalIsOpen: false\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var songName = _this.state.song;\n\n      var songId = _this.makeSongId(songName); //todo perform fetching logic here to get spotify object, save spotify id as songID\n\n\n      var songObject = {\n        spotify_id: songId,\n        title: '',\n        artist: '',\n        cover_art: '',\n        runtime: 0,\n        votes: 0\n      };\n      var temp = {};\n      var config = {\n        headers: {\n          'Authorization': 'Bearer ' + _this.props.token\n        }\n      };\n      console.log(_this.props.token);\n      var response_data = {\n        \"fake\": \"filler\"\n      };\n      axios.get('https://api.spotify.com/v1/search?q=' + songId + '&type=track&market=US&limit=1', config).then(function (response) {\n        console.log('Get track response: ');\n        console.log(response.data);\n\n        if (response.data.tracks.items[0]) {\n          var _response_data = response.data.tracks.items[0]; //post request\n\n          axios.post('/songs/add', {\n            \"spotify_id\": _response_data.id,\n            \"artist\": _response_data.artists[0].name,\n            \"title\": _response_data.name,\n            \"cover_art\": _response_data.album.images[1].url,\n            \"votes\": 0,\n            \"runtime\": _response_data.duration_ms\n          }).then(function (res) {\n            return console.log(res);\n          }).catch(function (error) {\n            console.log('create song error: ');\n            console.log(error);\n          });\n        } else {\n          console.log('error');\n        }\n      });\n\n      _this.handleClose();\n    };\n\n    _this.state = {\n      song: 'foo',\n      data: [],\n      token: ''\n    };\n    _this.handleClickOpen = _this.handleClickOpen.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // componentDidMount(){\n  //\n  //     this.setState({\n  //         token: this.props.token\n  //     });\n  // }\n  // onChange={this.handleChange('name')}\n\n\n  _createClass(AddSongDialog, [{\n    key: \"makeSongId\",\n    value: function makeSongId(songName) {\n      var songId = songName;\n      songId = songId.trim().toLowerCase();\n      songId = songId.replace(/\\s+/g, '%20');\n      return songId;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var token = this.props.token; //\n      // console.log(\"TOKEN BABY: \" + token);\n\n      console.log(token);\n      console.log(this.state.token);\n      return React.createElement(MuiThemeProvider, {\n        theme: THEME,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        open: this.props.isOpen,\n        onClose: this.handleClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Add Song\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Type the name of the song you would like to add to the queue!\"), React.createElement(TextField // className={classes.songTxt}\n      , {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Song Title\",\n        placeholder: \"Add Song Title\" // type=\"email\"\n        ,\n        onChange: this.handleChange,\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.handleSubmit,\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return AddSongDialog;\n}(Component);\n\nexport default withStyles(styles)(AddSongDialog); // export default AddSongDialog","map":{"version":3,"sources":["/Users/conley/Desktop/Projects/encore/encore-app/src/components/add-song-dialog.js"],"names":["React","Component","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","THEME","blue","MuiThemeProvider","withStyles","axios","require","styles","theme","songTxt","color","AddSongDialog","props","handleChange","event","setState","song","target","value","handleClickOpen","token","updateModalState","modalIsOpen","handleClose","handleSubmit","songName","state","songId","makeSongId","songObject","spotify_id","title","artist","cover_art","runtime","votes","temp","config","headers","console","log","response_data","get","then","response","data","tracks","items","post","id","artists","name","album","images","url","duration_ms","res","catch","error","bind","trim","toLowerCase","replace","classes","isOpen"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {THEME, blue} from \"../encore-theme\";\nimport MuiThemeProvider from \"@material-ui/core/es/styles/MuiThemeProvider\";\nimport {withStyles} from \"@material-ui/core/styles/index\";\n\nconst axios = require('axios');\n\n\n\nconst styles = theme => ({\n    songTxt: {\n        color: blue,\n    },\n    // fab: {\n    //     margin: theme.spacing.unit,\n    //     bottom: 0,\n    //     right: 0,\n    //     position: 'absolute',\n    //     color: extra_light_pink,\n    // },\n});\n\nclass AddSongDialog extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            song: 'foo',\n            data: [],\n            token: ''\n        };\n        this.handleClickOpen = this.handleClickOpen.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n\n    }\n\n    // componentDidMount(){\n    //\n    //     this.setState({\n    //         token: this.props.token\n    //     });\n    // }\n\n    // onChange={this.handleChange('name')}\n\n    makeSongId(songName){\n        let songId = songName;\n        songId = songId.trim().toLowerCase();\n        songId = songId.replace(/\\s+/g, '%20');\n        return songId;\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            song: event.target.value\n        });\n    };\n\n    handleClickOpen = () => {\n        this.setState({\n            token: this.props.token\n        }, () => this.props.updateModalState({\n            modalIsOpen: true,\n        }));\n        // this.props.updateModalState({\n        //     modalIsOpen: true,\n        // });\n    };\n\n    handleClose = () => {\n        this.props.updateModalState({\n            modalIsOpen: false,\n        });\n    };\n    \n    handleSubmit = () => {\n        const songName = this.state.song;\n        const songId = this.makeSongId(songName);\n\n        //todo perform fetching logic here to get spotify object, save spotify id as songID\n\n        const songObject = {\n            spotify_id: songId,\n            title: '',\n            artist: '',\n            cover_art: '',\n            runtime: 0,\n            votes: 0\n        }\n\n        var temp = {};\n        let config = {\n            headers:{\n                'Authorization' : 'Bearer ' + this.props.token\n            }\n        }\n        console.log(this.props.token)\n        var response_data = { \"fake\" : \"filler\"};\n\n        axios.get('https://api.spotify.com/v1/search?q=' + songId +'&type=track&market=US&limit=1', config).then(response => {\n            console.log('Get track response: ')\n            console.log(response.data)\n            if (response.data.tracks.items[0]) {\n                const response_data = response.data.tracks.items[0];\n\n\n                //post request\n                axios.post('/songs/add', {\n                    \"spotify_id\": response_data.id,\n                    \"artist\": response_data.artists[0].name,\n                    \"title\": response_data.name,\n                    \"cover_art\": response_data.album.images[1].url,\n                    \"votes\": 0,\n                    \"runtime\": response_data.duration_ms\n                }).then(res => console.log(res))\n                    .catch(error => {\n                        console.log('create song error: ')\n                        console.log(error)\n                    });\n            } else {\n                console.log('error');\n            }\n        })\n\n        this.handleClose();\n    };\n\n    render() {\n\n        const { classes } = this.props;\n        const { token } = this.props;\n        //\n        // console.log(\"TOKEN BABY: \" + token);\n        console.log(token)\n        console.log(this.state.token);\n\n        return (\n            <MuiThemeProvider theme={THEME}>\n                <Dialog\n                    open={this.props.isOpen}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Add Song</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Type the name of the song you would like to add to the queue!\n                        </DialogContentText>\n                        <TextField\n                            // className={classes.songTxt}\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Song Title\"\n                            placeholder=\"Add Song Title\"\n                            // type=\"email\"\n                            onChange={this.handleChange}\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleSubmit} color=\"secondary\">\n                            <strong>Submit</strong>\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </MuiThemeProvider>\n        );\n    }\n}\n\nexport default withStyles(styles)(AddSongDialog);\n// export default AddSongDialog\n"]},"metadata":{},"sourceType":"module"}