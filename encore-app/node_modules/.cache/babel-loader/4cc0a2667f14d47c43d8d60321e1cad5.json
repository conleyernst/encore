{"ast":null,"code":"import _classCallCheck from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/conley/Desktop/Projects/encore/encore-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/* eslint-disable no-underscore-dangle */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { getDisplayName, ponyfillGlobal } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nimport themeListener from './themeListener';\nvar defaultTheme;\n\nfunction getDefaultTheme() {\n  if (defaultTheme) {\n    return defaultTheme;\n  }\n\n  defaultTheme = createMuiTheme({\n    typography: {\n      suppressWarning: true\n    }\n  });\n  return defaultTheme;\n} // Provide the theme object as a property to the input component.\n\n\nvar withThemeOld = function withThemeOld() {\n  return function (Component) {\n    var WithTheme =\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(WithTheme, _React$Component);\n\n      function WithTheme(props, context) {\n        var _this;\n\n        _classCallCheck(this, WithTheme);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(WithTheme).call(this));\n        _this.state = {\n          // We use || as the function call is lazy evaluated.\n          theme: themeListener.initial(context) || getDefaultTheme()\n        };\n        return _this;\n      }\n\n      _createClass(WithTheme, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribeId = themeListener.subscribe(this.context, function (theme) {\n            _this2.setState({\n              theme: theme\n            });\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.unsubscribeId !== null) {\n            themeListener.unsubscribe(this.context, this.unsubscribeId);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              innerRef = _this$props.innerRef,\n              other = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\"]);\n\n          return React.createElement(Component, _extends({\n            theme: this.state.theme,\n            ref: innerRef\n          }, other));\n        }\n      }]);\n\n      return WithTheme;\n    }(React.Component);\n\n    process.env.NODE_ENV !== \"production\" ? WithTheme.propTypes = {\n      /**\n       * Use that property to pass a ref callback to the decorated component.\n       */\n      innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n    } : void 0;\n    WithTheme.contextTypes = themeListener.contextTypes;\n\n    if (process.env.NODE_ENV !== 'production') {\n      WithTheme.displayName = \"WithTheme(\".concat(getDisplayName(Component), \")\");\n    }\n\n    hoistNonReactStatics(WithTheme, Component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithTheme.Naked = Component;\n    }\n\n    return WithTheme;\n  };\n};\n/* istanbul ignore if */\n\n\nif (!ponyfillGlobal.__MUI_STYLES__) {\n  ponyfillGlobal.__MUI_STYLES__ = {};\n}\n\nif (!ponyfillGlobal.__MUI_STYLES__.withTheme) {\n  ponyfillGlobal.__MUI_STYLES__.withTheme = withThemeOld;\n}\n\nexport default ponyfillGlobal.__MUI_STYLES__.withTheme;","map":null,"metadata":{},"sourceType":"module"}