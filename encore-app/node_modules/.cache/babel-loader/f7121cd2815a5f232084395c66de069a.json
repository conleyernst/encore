{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"; // @inheritedComponent Paper\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\n\nfunction Card(props) {\n  var classes = props.classes,\n      className = props.className,\n      raised = props.raised,\n      other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: classNames(classes.root, className),\n    elevation: raised ? 8 : 1\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css-api) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nCard.defaultProps = {\n  raised: false\n};\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","map":null,"metadata":{},"sourceType":"module"}